@model IEnumerable<FotoDB.Models.KrajModel>
@*@model PagedList.IPagedList<FotoDB.Models.KrajModel>
    @using PagedList.Mvc;
    @using PagedList;
    <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />*@
@*@model PaginatedList<FotoDB.Models.KrajModel>*@

@{
    ViewData["Title"] = "Kraje";
}

<h1>Kraje</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Dodaj nowy</a>
</p>

@*@using (Html.BeginForm("Index", "Kraj", FormMethod.Get))
{
    <div>
        Wyszukaj po nazwie: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Wyszukaj" />
    </div>
}*@
<hr />
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <div class="form-group">
            <input type="text" class="form-control" name="SearchString" placeholder="Podaj nazwę kraju" value="@ViewData["CurrentFilter"]"/>
            <input type="submit" value="Wyszukaj" class="btn btn-primary" />
            <a asp-action="Index" class="btn btn-info">Powrót do listy krajów</a>
        </div>
    </div>
</form>
<hr />
<table class="table table-dark table-hover table-bordered">
    <thead>
        <tr>
            <th>

                @*@Html.ActionLink(@Html.DisplayNameFor(model => model.KrajModelID), "Index", new { sortOrder = ViewBag.IDSortParm })*@
                @*<a asp-action="Index" asp-route-sortOrder="@ViewData["IDSortParm"]">@Html.DisplayNameFor(model => model.KrajModelID)</a>*@
                @*@Html.ActionLink("KrajModelID", "Index", new { sortOrder = ViewBag.IDSortParm, currentFilter = ViewBag.CurrentFilter })*@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["IDSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model.KrajModelID)</a>

            </th>
            <th>
                @*@Html.ActionLink(@Html.DisplayNameFor(model => model.Nazwa), "Index", new { sortOrder = ViewBag.NameSortParm })*@
                @*<a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model.Nazwa)</a>*@
                @*@Html.ActionLink("Nazwa", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })*@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NazwaSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model.Nazwa)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.KrajModelID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Nazwa)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.KrajModelID" class="btn btn-outline-info">Pokaż szczegóły</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@*<br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))*@


@*@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}*@

@*<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>*@
